# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    NOTES_0.2                                          :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: home <home@student.42.fr>                  +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/06/27 20:27:46 by home              #+#    #+#              #
#    Updated: 2020/06/27 20:45:37 by home             ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

The well is deeper than I thought.
Looking into a general way for the minimax algorithm I looked
to see if there were other implementation. After implementing some
code I try to find other peoples version and see if I gain some new
insight and try to find trinkets of treasure that I didn't think of.
By doing this I would combine different styles to create a version
that I would be pretty fond of.

However looking for a minimax implementation took me to an Algorithm
called Alpha-Beta Pruning. I may have thought about it before, but was
having trouble imagining how the pruning would happen until I saw
a diagram of the minimax algorithm that reached each node. By seeing
that tree I understood how I might attempt to code Alpha-Beta Pruning.

But while doing this minimax algorithm I was thinking of hash tables,
and how/where to use memory to make the algorithm better. I knew that
porting it to chess would mean that it creates less optimal moves, so I
thought about connect four. This lead me to Chinook a checkers playing
algorithm. But even then it isn't perfect. And the required research to
find the optimal checkers playing agent took years to discover and code.
As such I conclude that the well is deeper than I thought.
